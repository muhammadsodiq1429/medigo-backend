generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// ========== ENUM lar ==========
enum doctor_ver_status_enum {
  draft
  under_review
  verified
  suspended
  rejected
}

enum gender {
  male
  female
}

enum appointment_status_enum {
  pending
  paid
  completed
  cancelled
}

enum weekday_enum {
  mon
  tue
  wed
  thu
  fri
  sat
  sun
}

enum region_enum {
  Andijon
  Buxoro
  Fargona           @map("Farg‘ona")
  Jizzax
  Xorazm
  Namangan
  Navoiy
  Qashqadaryo
  Qoraqalpogiston   @map("Qoraqalpog‘iston")
  Samarqand
  Sirdaryo
  Surxondaryo
  Toshkent_viloyati @map("Toshkent viloyati")
  Toshkent_shahar   @map("Toshkent shahar")
}

// ========== MODELLAR ==========

model admin {
  id                   Int     @id @default(autoincrement())
  username             String  @unique @db.VarChar(255)
  fullname             String? @db.VarChar(255)
  is_active            Boolean @default(true)
  is_superadmin        Boolean @default(false)
  hashed_password      String  @db.VarChar(255)
  hashed_refresh_token String? @db.VarChar(255)
}

model doctor {
  id                   Int                     @id @default(autoincrement())
  first_name           String                  @db.VarChar(255)
  last_name            String                  @db.VarChar(255)
  email                String                  @unique @db.VarChar(255)
  phone                String                  @unique @db.VarChar(255)
  gender               gender
  date_of_birth        DateTime?               @db.Date
  avatar_url           String?                 @db.VarChar(255)
  verification_status  doctor_ver_status_enum? @default(draft)
  is_active            Boolean                 @default(false)
  region               region_enum?
  average_rating       Decimal?                @default(0) @db.Decimal(12, 2)
  review_count         Int?                    @default(0)
  balance              Decimal?                @default(0) @db.Decimal(12, 2)
  hashed_password      String                  @db.VarChar(255)
  hashed_refresh_token String?                 @db.VarChar(255)
  since_experience     DateTime?               @db.Date
  created_at           DateTime                @default(now()) @db.Timestamptz
  updated_at           DateTime                @default(now()) @db.Timestamptz
}

model document_type {
  id       Int     @id @default(autoincrement())
  code     String  @unique @db.VarChar(255)
  name     String? @db.VarChar(255)
  required Boolean @default(false)
}

model doctor_documents {
  id        Int    @id @default(autoincrement())
  type_id   Int
  doctor_id Int
  file_url  String @db.VarChar(255)

  @@unique([type_id, doctor_id])
}

model service_type {
  id          Int     @id @default(autoincrement())
  name        String  @db.VarChar(255)
  description String? @db.Text
}

model doctor_service {
  id        Int     @id @default(autoincrement())
  doctor_id Int
  type_id   Int
  price     Decimal @db.Decimal(12, 2)

  @@unique([doctor_id, type_id])
}

model doctor_schedule {
  id         Int          @id @default(autoincrement())
  doctor_id  Int
  start_time DateTime     @db.Time
  end_time   DateTime     @db.Time
  weekday    weekday_enum

  @@unique([doctor_id, weekday])
}

model doctor_cards {
  id          Int     @id @default(autoincrement())
  doctor_id   Int
  card_number Int
  exp_month   Int
  exp_year    Int
  status      String  @db.VarChar(16)
  is_main     Boolean @default(false)

  @@unique([doctor_id, card_number, exp_month, exp_year])
}

model patient {
  id                   Int       @id @default(autoincrement())
  first_name           String    @db.VarChar(255)
  last_name            String?   @db.VarChar(255)
  phone                String    @unique @db.VarChar(255)
  email                String    @unique @db.VarChar(255)
  gender               gender?
  is_active            Boolean  @default(false)
  avatar_url           String?   @db.VarChar(255)
  date_of_birth        DateTime? @db.Date
  hashed_password      String    @db.VarChar(255)
  hashed_refresh_token String?   @db.VarChar(255)
  created_at           DateTime  @default(now()) @db.Timestamptz
  updated_at           DateTime  @default(now()) @db.Timestamptz
}

model patient_saved_doctors {
  id         Int @id @default(autoincrement())
  patient_id Int
  doctor_id  Int

  @@unique([patient_id, doctor_id])
}

model patient_cards {
  id          Int     @id @default(autoincrement())
  patient_id  Int
  card_number Int
  exp_month   Int
  exp_year    Int
  status      String  @db.VarChar(16)
  is_main     Boolean @default(false)

  @@unique([patient_id, card_number, exp_month, exp_year])
}

model specialization {
  id          Int    @id @default(autoincrement())
  name        String @db.VarChar(255)
  description String @db.Text
}

model doctor_specialization {
  id                Int @id @default(autoincrement())
  doctor_id         Int
  specialization_id Int

  @@unique([doctor_id, specialization_id])
}

model appointment {
  id           Int                     @id @default(autoincrement())
  doctor_id    Int
  patient_id   Int
  service_id   Int
  scheduled_at DateTime
  status       appointment_status_enum @default(pending)
  amount       Decimal                 @db.Decimal(12, 2)
}

model review {
  id             Int    @id @default(autoincrement())
  doctor_id      Int
  patient_id     Int
  author         String @db.VarChar(16)
  content        String @db.Text
  rating         Int
  appointment_id Int

  @@unique([appointment_id, author])
}

model payment {
  id             Int                     @id @default(autoincrement())
  appointment_id Int                     @unique
  doctor_id      Int
  patient_id     Int
  total_amount   Decimal                 @db.Decimal(12, 2)
  status         appointment_status_enum @default(paid)
  paid_at        DateTime?
  created_at     DateTime                @default(now()) @db.Timestamptz
}
